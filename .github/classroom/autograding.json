{
  "tests": [
    {
      "name": "load_expression(): returns a tibble, not a dataframe",
      "setup": "awk -F '\t' '$1 == 1 { print \"testnum:\", $1, \"\\nresult:\", $2, \"\\ntest:\", $3, \"\\nmessage:\", $4; exit}' test_results.csv",
      "run": "awk -F '\t' '$1 == 1 { print; exit}' test_results.csv | grep -q -e 'success' -e 'warning'",
      "input": "",
      "output": "",
      "comparison": "exact",
      "timeout": 10,
      "points": 1
    },
    {
      "name": "load_expression(): returns a tibble with the right dimensions",
      "setup": "awk -F '\t' '$1 == 2 { print \"testnum:\", $1, \"\\nresult:\", $2, \"\\ntest:\", $3, \"\\nmessage:\", $4; exit}' test_results.csv",
      "run": "awk -F '\t' '$1 == 2 { print; exit}' test_results.csv | grep -q -e 'success' -e 'warning'",
      "input": "",
      "output": "",
      "comparison": "exact",
      "timeout": 10,
      "points": 1
    },
    {
      "name": "filter_15(): correctly filters the rows meeting the specified criteria",
      "setup": "awk -F '\t' '$1 == 3 { print \"testnum:\", $1, \"\\nresult:\", $2, \"\\ntest:\", $3, \"\\nmessage:\", $4; exit}' test_results.csv",
      "run": "awk -F '\t' '$1 == 3 { print; exit}' test_results.csv | grep -q -e 'success' -e 'warning'",
      "input": "",
      "output": "",
      "comparison": "exact",
      "timeout": 10,
      "points": 1
    },
    {
      "name": "affy_to_hgnc(): returns the right identifiers for the chosen probe, 1553551_s_at",
      "setup": "awk -F '\t' '$1 == 4 { print \"testnum:\", $1, \"\\nresult:\", $2, \"\\ntest:\", $3, \"\\nmessage:\", $4; exit}' test_results.csv",
      "run": "awk -F '\t' '$1 == 4 { print; exit}' test_results.csv | grep -q -e 'success' -e 'warning'",
      "input": "",
      "output": "",
      "comparison": "exact",
      "timeout": 10,
      "points": 1
    },
    {
      "name": "reduce_data(): returns a reduced tibble with the specified columns",
      "setup": "awk -F '\t' '$1 == 5 { print \"testnum:\", $1, \"\\nresult:\", $2, \"\\ntest:\", $3, \"\\nmessage:\", $4; exit}' test_results.csv",
      "run": "awk -F '\t' '$1 == 5 { print; exit}' test_results.csv | grep -q -e 'success' -e 'warning'",
      "input": "",
      "output": "",
      "comparison": "exact",
      "timeout": 10,
      "points": 1
    },
    {
      "name": "convert_to_long(): correctly converts a wide format tibble to long format",
      "setup": "awk -F '\t' '$1 == 6 { print \"testnum:\", $1, \"\\nresult:\", $2, \"\\ntest:\", $3, \"\\nmessage:\", $4; exit}' test_results.csv",
      "run": "awk -F '\t' '$1 == 6 { print; exit}' test_results.csv | grep -q -e 'success' -e 'warning'",
      "input": "",
      "output": "",
      "comparison": "exact",
      "timeout": 10,
      "points": 1
    },
    {
      "name": "convert_to_long(): contains a column named sample",
      "setup": "awk -F '\t' '$1 == 7 { print \"testnum:\", $1, \"\\nresult:\", $2, \"\\ntest:\", $3, \"\\nmessage:\", $4; exit}' test_results.csv",
      "run": "awk -F '\t' '$1 == 7 { print; exit}' test_results.csv | grep -q -e 'success' -e 'warning'",
      "input": "",
      "output": "",
      "comparison": "exact",
      "timeout": 10,
      "points": 1
    }
  ]
}